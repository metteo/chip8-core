<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.novaware.chip8</groupId>
    <artifactId>chip8-core</artifactId>
    <version>0.9.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <dagger.version>2.26</dagger.version>
        <jpms.name>net.novaware.chip8.core</jpms.name>
        <jpms.opens>--add-opens ${jpms.name}/${jpms.name}</jpms.opens>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- <fork>true</fork>-->
                    <release>11</release>
                    <compilerArguments>
                        <Xmaxerrs>10000</Xmaxerrs>
                        <Xmaxwarns>10000</Xmaxwarns>
                    </compilerArguments>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.dagger</groupId>
                            <artifactId>dagger-compiler</artifactId>
                            <version>${dagger.version}</version>
                        </path>
                        <path>
                            <groupId>org.checkerframework</groupId>
                            <artifactId>checker</artifactId>
                            <version>3.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                    <annotationProcessors>
                        <annotationProcessor>dagger.internal.codegen.ComponentProcessor</annotationProcessor>
                        <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                        <annotationProcessor>org.checkerframework.checker.optional.OptionalChecker</annotationProcessor>
                        <annotationProcessor>org.checkerframework.checker.interning.InterningChecker</annotationProcessor>
                        <annotationProcessor>org.checkerframework.checker.lock.LockChecker</annotationProcessor>
                        <annotationProcessor>org.checkerframework.checker.fenum.FenumChecker</annotationProcessor>
                        <annotationProcessor>org.checkerframework.checker.formatter.FormatterChecker</annotationProcessor>
                        <annotationProcessor>org.checkerframework.checker.units.UnitsChecker</annotationProcessor>
                        <!-- TODO: enable and fix errors -->
                        <!-- <annotationProcessor>org.checkerframework.checker.signedness.SignednessChecker</annotationProcessor> -->
                        <!-- <annotationProcessor>org.checkerframework.checker.index.IndexChecker</annotationProcessor> -->
                    </annotationProcessors>
                    <compilerArgs>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                        <arg>-AskipDefs=\.DaggerBoardFactory$</arg> <!-- generated by dagger -->
                        <!-- <arg>-Awarns</arg> -->
                    </compilerArgs>
                </configuration>
            </plugin>


            <!-- Mandatory plugins for using Spock -->
            <plugin>
                <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
                visit https://github.com/groovy/GMavenPlus/wiki -->
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.6.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Optional plugins for using Spock -->
            <!-- Only required if names of spec classes don't match default Surefire patterns (`*Test` etc.) -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <useFile>false</useFile>
                    <includes>
                        <include>**/*Test.class</include>
                        <include>**/*Spec.class</include>
                    </includes>
                    <argLine> <!-- TODO: Report here: https://issues.apache.org/jira/browse/SUREFIRE-1262  -->
                        ${jpms.opens}=ALL-UNNAMED
                        ${jpms.opens}.clock=ALL-UNNAMED
                        ${jpms.opens}.cpu=ALL-UNNAMED
                        ${jpms.opens}.cpu.instruction=ALL-UNNAMED
                        ${jpms.opens}.cpu.instruction.definition=ALL-UNNAMED
                        ${jpms.opens}.cpu.register=ALL-UNNAMED
                        ${jpms.opens}.cpu.unit=ALL-UNNAMED
                        ${jpms.opens}.gpu=ALL-UNNAMED
                        ${jpms.opens}.memory=ALL-UNNAMED
                        ${jpms.opens}.port=ALL-UNNAMED
                        ${jpms.opens}.port.impl=ALL-UNNAMED
                        ${jpms.opens}.util=ALL-UNNAMED
                    </argLine>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.22.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.21.0</version>
                <configuration>
                    <includes>
                        <include>**/*IT.class</include>
                        <include>**/*CT.class</include>
                    </includes>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.21.0</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Mandatory dependencies for using Spock -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>1.3-groovy-2.5</version>
            <scope>test</scope>
        </dependency>
        <!-- Optional dependencies for using Spock -->
        <dependency> <!-- use a specific Groovy version rather than the one specified by spock-core -->
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.5.7</version>
            <scope>test</scope>
            <type>pom</type>
        </dependency>
        <dependency> <!-- enables mocking of classes (in addition to interfaces) -->
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.9.3</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- enables mocking of classes without default constructor (together with CGLIB) -->
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>2.6</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- only required if Hamcrest matchers are used -->
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.13.0</version>
        </dependency>

        <!--Log4j2 with yml config -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.13.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.10.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.9.10</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- for jackson-dataformat-yaml with jpms support -->
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.26</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.dagger</groupId>
            <artifactId>dagger</artifactId>
            <version>${dagger.version}</version>
        </dependency>

        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>3.2.0</version>
        </dependency>
    </dependencies>
</project>